/*********头文件包含*************/
#include <iom48v.h>
#include <macros.h>
#include "config.h"
#define FS	PORTD&=~0X02;
#define BFS PORTD|=0X02;
unsigned int ada,k1,tempvalue;
const char table[16]={0x3f,0x06,0x5B,0X4F,0X66,0X6D,0X7D,0X07,0X7F,0X6F};//0-F数码管码值
/***********宏定义*************/
#define  uchar unsigned char 
#define  uint unsigned int
uint ms9=9,us45=4500,us56=560,us16=1690;
uchar user=0x80,sj=0x56;
void HWFS();
void FSD(uchar n);
void FSU(uchar use);
void FSZJ(uchar user);
void Delayus(uint US);
void port_init(void);
void Delay_ms (uint ms);
void timer1_init(void);
void init_devices(void);
void disp_smg(uchar value,uchar wei);
uint mega48_ad(void);
/***************************************************
宏定义名称：IO端口操作宏定义。
功      能：实现数码管的位选。
***************************************************/
#define SET_WEI1 PORTC&=~BIT(2)   
#define SET_WEI2 PORTC&=~BIT(4)
#define SET_WEI3 PORTC&=~BIT(5)
#define CLR_WEI1 PORTC|=BIT(2)
#define CLR_WEI2 PORTC|=BIT(4)
#define CLR_WEI3 PORTC|=BIT(5)
#define CLR_ALL  PORTC|=0X34

uchar flag=1;  //定义flag标志，用于标示定时1秒时间到
/*******************************************
函数名称: 红外发射函数
功    能: 实现信号的发射
参    数: 无
返 回 值: 无
/********************************************/
void HWFS(void)
{
 	FS;
	Delay_ms(ms9);
	BFS;
	Delayus(us45);
    FSU(user);
	FSU(~user);
	FSU(sj);
	FSU(~sj);

}
/*******************************************
函数名称: 红外发射单个字节
功    能: 实现信号的发射
参    数: uint n
返 回 值: 无
/********************************************/
void FSD(uchar n)
{
 	 if(n=='0')//低电平
	 {
		 FS;
		 Delayus(us56);
		 BFS;
		 Delayus(us56);
	 }
	 else
	 {
	  	FS;
		Delayus(us56);
		BFS;
		Delayus(us16); 
	 }
}
/*******************************************
函数名称: 红外发射八个字节
功    能: 实现用户信息码的发射
参    数: uchar user
返 回 值: 无
/********************************************/
void FSU(uchar use)
{
     uint v;
 	 for (v=0;v<8;v++)                     //循环8次移位 
       {             
			 if(use&0x01) FSD(1); //发送最低位
			 else          FSD(0);     
			 use >>= 1;                //右移一位 
        }    
}
/*******************************************
函数名称: 红外发射九个字节
功    能: 实现温度数据的发射
参    数: uchar temp
返 回 值: 无
/********************************************/
void FSZJ(uchar user)
{
     uint v;
 	 for (v=0;v<9;v++)                     //循环8次移位 
       {     
	                
			 if(user&0x01) FSD(1); //发送最低位
			 else          FSD(0);     
			 user >>= 1;                //右移一位 
        }    
}




/*******************************************
函数名称: Delayus
功    能: 延时指定微秒（8M晶振）
参    数: US--延时的微秒数(大约，不是很精确，MS越大越准确)
返回值  : 无
/********************************************/
void Delayus(uint US)		  
{
 int i;
 US=US*5/4;		  	 //5/4是在8MHz晶振下，通过软件仿真反复实验得到的数值
 for( i=0;i<US;i++); 
}

/*******************************************
函数名称: IO口初始化函数
功    能: 实现IO初始化
参    数: 无
返 回 值: 无
/********************************************/
void port_init(void)
{
 DDRC  = 0x34;  //PC0作为AD的输入
 PORTC = 0x34;
DDRB  = 0xFF;
 PORTB = 0x00;
 DDRD=0x02;
 PORTD=0X02;
}
/*******************************************
函数名称: 软件延时函数
功    能: 实现软件延时
参    数: ms--延时的毫秒数
返 回 值: 无
/********************************************/
void Delay_ms (uint ms)
{
 	 unsigned int i,j;
	 for(i=0;i<ms;i++)
	 	for(j=0;j<1141;j++);
}
/*******************************************
函数名称: 定时器1初始化函数
功    能: 分频数1024，定时1秒，误差为0.0%
参    数: 无
返 回 值: 无
/********************************************/
void timer1_init(void)
{
 TCCR1B = 0x00; //定时器停止
 TCNT1H = 0x5B; //setup
 TCNT1L = 0x89;
 OCR1AH = 0x1E;
 OCR1AL = 0x84;
 OCR1BH = 0x1E;
 OCR1BL = 0x84;
 ICR1H  = 0x1E;
 ICR1L  = 0x84;
 TCCR1A = 0x00;
 TCCR1B = 0x05; //start Timer
}

/*******************************************
函数名称: 定时器1中断处理函数
功    能: flag标志位来指示状态
参    数: 无
返 回 值: 无
/********************************************/
#pragma interrupt_handler timer1_ovf_isr:14
void timer1_ovf_isr(void)
{

 TCNT1H = 0x5B; //重新装载定时器1初值的高8位
 TCNT1L = 0x89; //重新装载定时器1初值的低8位
  if(flag==1)  flag=0;  //flag标志位取反
 else flag=1;  
 
}

/*******************************************
函数名称: 设备初始化函数
功    能: 对AVR单片机进行初始化
参    数: 无
返 回 值: 无
/********************************************/
void init_devices(void)
{
 //stop errant interrupts until set up
 CLI(); //disable all interrupts
 port_init();
 timer1_init();

 MCUCR = 0x00;
 EICRA = 0x00; //extended ext ints
 EIMSK = 0x00;
 
 TIMSK0 = 0x00; //timer 0 interrupt sources
 TIMSK1 = 0x01; //timer 1 interrupt sources
 TIMSK2 = 0x00; //timer 2 interrupt sources
 
 PCMSK0 = 0x00; //pin change mask 0 
 PCMSK1 = 0x00; //pin change mask 1 
 PCMSK2 = 0x00; //pin change mask 2
 PCICR = 0x00; //pin change enable 
 PRR = 0x00; //power controller
 SEI(); //re-enable interrupts
 //all peripherals are now initialized
}

/*************************************************************
函数名称: 数码管显示函数。
功    能: 实现在某位数码管上显示要显示的数值。
参    数: value--数码管上要显示的值；wei--在哪一位数码管上显示
返 回 值: 无
/************************************************************/
void disp_smg(uchar value,uchar wei)
{
  PORTB=value;//给数码管赋值
  switch(wei)
    {
	  case 1:SET_WEI1;CLR_WEI3;break;
	  case 2:CLR_WEI1;SET_WEI2;break;
	  case 3:CLR_WEI2;SET_WEI3;break;
	  default:break;
	}
  Delay_ms(2);//延时2ms
  PORTC|=0X34;//关显示
}
/*************************************************************
函数名称: AD采样函数。
功    能: 实现电压的AD采样。
参    数: 无
返 回 值: addata--AD采样的值。1
/************************************************************/
uint mega48_ad(void)
{
     uint addata;
	 ADCSRA = 0x00; //disable adc
	 //PORTA&=~BIT(PA4);
	 ADMUX=0x00;//选择外部参考电压
	 //ADMUX=0xC4;//选择内部参考电压
	 ACSR=0X80;
	 //ADCSRB = 0x00;
	 ADCSRA = 0xC7;
	 while(!(ADCSRA&(BIT(ADIF))));
     addata=ADCL;
	 addata=addata+ADCH*256;
	 //ADCSRA = 0x00;
	 return addata;
}   

/********************************************
函数名称: 主函数
功    能: 实现函数主体功能。
参    数: 无
返 回 值: 无
********************************************/
void main(void)
{
  uint temp_high,temp_middle,temp_low,tempvalue;
  init_devices();
  while(1)
    {
	  if(flag!=0)
	  	{	
		k1=200;
		ada=0;
      		ada=mega48_ad();  //读出AD的采样值
			while(ada<(NTCres[k1-200]))
			{
			 	k1++;
				if(k1>500) break;
				tempvalue=k1;
			}
		}
		HWFS();
		Delay_ms(1000);		
		temp_high=tempvalue/100;//十位
		temp_middle=tempvalue%100/10;//个位
		temp_low=tempvalue%10;//小数
		if(tempvalue>400||tempvalue<200)
		{
			disp_smg(0b01111001,1);   //报错  
	  		disp_smg(0b01010000,2); 
	  		disp_smg(0b01010000,3);
			
			
		}		
		else 
		{
		  	if(tempvalue>=100)
	  			disp_smg(table[temp_high],1);  //在3位数码管上显示AD采样温度    
	  		disp_smg(table[temp_middle]+0x80,2); //gewei
	  		disp_smg(table[temp_low],3); //xiaoshu
			
	  	}
	}
}

